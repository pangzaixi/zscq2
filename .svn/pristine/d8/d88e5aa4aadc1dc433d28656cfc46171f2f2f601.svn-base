package com.zscq2.zhangdan.conftroller;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.math.BigInteger;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy;
import org.apache.poi.xwpf.usermodel.ParagraphAlignment;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import org.apache.poi.xwpf.usermodel.XWPFTable;
import org.apache.poi.xwpf.usermodel.XWPFTableCell;
import org.apache.poi.xwpf.usermodel.XWPFTableRow;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSectPr;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTShd;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.zkoss.zk.ui.Component;
import org.zkoss.zk.ui.Executions;
import org.zkoss.zk.ui.util.GenericForwardComposer;
import org.zkoss.zkplus.spring.SpringUtil;
import org.zkoss.zul.Combobox;
import org.zkoss.zul.Datebox;
import org.zkoss.zul.ListModel;
import org.zkoss.zul.ListModelList;
import org.zkoss.zul.Listbox;
import org.zkoss.zul.Messagebox;
import org.zkoss.zul.Paging;
import org.zkoss.zul.Textbox;
import org.zkoss.zul.Window;

import com.system.utils.LogManage;
import com.system.utils.Screen;
import com.yewu.zscq.bean.User;
import com.zscq2.jxqd.bean.Ajlx;
import com.zscq2.jxqd.bean.Lazb;
import com.zscq2.jxqd.service.serviceimpl.LazbService;
import com.zscq2.ss.bean.Ssaj;
import com.zscq2.zhangdan.bean.ZdBean;
import com.zscq2.zhangdan.service.ZdService;


@Controller("zahngdanController")   
@Scope("prototype") 
public class ZahngdanController    extends GenericForwardComposer{
	
Window zhangdanWin;
Listbox listbox;//页面遍历方式加载数据
Paging paging;
Boolean pagingOnClick = false;//是否点击的分页标签

//查询条件
Textbox wtkh;//委托客户
Combobox ajlx;//案件类型
Textbox ajh;//案件号
Datebox zdrq_q1;//账单日期参数1
Datebox zdrq_q2;//账单日期参数2

//获取service对象
ZdService zdService = (ZdService)SpringUtil.getBean("zdService");
LazbService lazbService = (LazbService)SpringUtil.getBean("lazbService");

public void doAfterCompose(Component comp) throws Exception {
	super.doAfterCompose(comp);//该行必须存在，否则异常
	
	session.setAttribute("zahngdanController", this.getController());
	
	int screenWidth = (int)session.getAttribute("screenWidth");
	int screenHeight = (int)session.getAttribute("screenHeight");
    int[] t  =Screen.widthAndHeight("2",screenWidth,screenHeight);
        
    zhangdanWin.setWidth(screenWidth-t[0]+"px");
    zhangdanWin.setHeight(screenHeight-t[1]+"px");
    
    
	//案件类型
    List<Ajlx> list_ajlx = lazbService.selectAjlx(null);
	ListModel comboboxModelList =new ListModelList<Ajlx>();
	comboboxModelList = null;
	comboboxModelList = new ListModelList(list_ajlx);
	ajlx.setModel(comboboxModelList);
	
} 

/**
 * 查询方法
 */
public void onClick$queryButton(){
	
	Map map = new HashMap<Object,Object>();
	param(map);
	List<ZdBean> list = zdService.selectZd(map);
	Date d = new Date();
	
	ListModel listModelList =new ListModelList<ZdBean>();
	listModelList = null;
	if(list!= null && list.size()>0){
		listModelList = new ListModelList(list);
	}

	listbox.setModel(listModelList);
	listbox.invalidate();	
	listbox.focus();//获得焦点，使复选框效果生效
	//初始化分页标签
	Integer a = Integer.MAX_VALUE;
	Integer a1 = Integer.MIN_VALUE;
	int count = zdService.selectZd_count(map);
	paging.setTotalSize(count);
}

/**
 * 新增按钮,弹出编辑窗口
 */
public void onClick$addButton() {
    //create a window programmatically and use it as a modal dialog.
	Map<String, Object> arg1 = new HashMap<String, Object>();
	arg1.put("msg", "Hello ZK!");

    Window window = (Window)Executions.createComponents(
            "/jsp/zscq/zhangdan/addZd.zul", zhangdanWin, arg1);
    window.doModal();
    
}
private void param(Map<Object,Object> map){
	if(wtkh.getValue() != null && !"".equals(wtkh.getValue())){
		map.put("wtkh", wtkh.getValue());
	}
	if(ajlx.getValue() != null ){
		map.put("ajlx", ajlx.getValue());
	}
	if(ajh.getValue() != null && !"".equals(ajh.getValue())){
		map.put("ajh", ajh.getValue());
	}
	SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
	if(zdrq_q1.getValue()!=null){
		map.put("zdrq_q1", f.format(zdrq_q1.getValue()));
	}
	if(zdrq_q2.getValue()!=null){
		Calendar calendar = new GregorianCalendar();
		Date date = zdrq_q2.getValue();
		calendar.setTime(date); 
		calendar.add(calendar.DATE,1);//把日期往后增加一天.整数往后推,负数往前移动
		date = calendar.getTime();
		map.put("zdrq_q2", f.format(date));
	}
	if(pagingOnClick == true){
		pagingOnClick = false;
		map.put("begin", paging.getPageSize()*paging.getActivePage());
		map.put("end", paging.getPageSize());
	}else{
		paging.setActivePage(0);
		map.put("begin", 0);
		map.put("end", paging.getPageSize());
	}
}

/**
 * 删除立案记录
 * @throws ParseException 
 */
public void onClick$deleteButton() throws ParseException{
	if(listbox.getSelectedItem() == null){
		Messagebox.show("请选择记录","注意", Messagebox.OK, Messagebox.EXCLAMATION);
		return;
	}else{
		ZdBean zd = (ZdBean)listbox.getSelectedItem().getValue();
		
		
		
		Messagebox.show("确认删除? \n 账单号："+zd.getZdnum()+"\n 委托客户："+zd.getWtkh()+"\n 案件类型："+ zd.getAjlx(), 
				"请确认", Messagebox.OK | Messagebox.CANCEL, Messagebox.QUESTION, new org.zkoss.zk.ui.event.EventListener() {
		    public void onEvent(org.zkoss.zk.ui.event.Event evt) throws java.lang.InterruptedException, ParseException {
		        if (evt.getName().equals("onOK")) {
		        	Map<Object, Object> map = new HashMap<Object, Object>();
					map.put("id", zd.getId());
					
					zdService.deleteZd(map);
					zdService.deleteZd_sub(map);
					onClick$queryButton();//刷新父窗口表格
					
					//记录操作日志
					User user = (User)session.getAttribute("user");
					LogManage logManage = new LogManage();
					logManage.addLog("删除账单："+zd.getZdnum(),user,"账单删除");
					
		        } 
		    }
		});
	    
	    
	}
}
/**
 * 清空查询条件
 */
public void onClick$clearButton(){
	ajh.setValue("");
	wtkh.setValue("");
	zdrq_q1.setValue(null);
	zdrq_q2.setValue(null);
	ajlx.setValue("");
	
}		 
/**
 * 导出账单
 */
public void onClick$exportButton() throws IOException{
	XWPFDocument document= new XWPFDocument();
	
	//Write the Document in file system
    FileOutputStream out = new FileOutputStream(new File("d:\\create_table.docx"));
    addTable(document);//上部无边框表格
    //添加标题
    XWPFParagraph titleParagraph = document.createParagraph();
    //设置段落居中
    titleParagraph.setAlignment(ParagraphAlignment.CENTER);
    XWPFRun titleParagraphRun = titleParagraph.createRun();
    titleParagraphRun.setText("帐          单");
    titleParagraphRun.setColor("000000");
    titleParagraphRun.setFontSize(16);
    titleParagraphRun.setBold(true);//加粗
    titleParagraphRun.setFontFamily("仿宋");

    addTable2(document);//中间无边框表格
    
    //换行
    XWPFParagraph paragraph1 = document.createParagraph();
    XWPFRun paragraphRun1 = paragraph1.createRun();
    paragraphRun1.setText("\r");

    //基本信息表格
    XWPFTable infoTable = document.createTable();
    //去表格边框
//    infoTable.getCTTbl().getTblPr().unsetTblBorders();

    //列宽自动分割
    CTTblWidth infoTableWidth = infoTable.getCTTbl().addNewTblPr().addNewTblW();
    infoTableWidth.setType(STTblWidth.DXA);
    infoTableWidth.setW(BigInteger.valueOf(9072));

    //表格第一行
    XWPFTableRow infoTableRowOne = infoTable.getRow(0);
 
    infoTableRowOne.getCell(0).setText("序号");
    infoTableRowOne.addNewTableCell().setText("我方案号");
    infoTableRowOne.addNewTableCell().setText("商标名称");
    infoTableRowOne.addNewTableCell().setText("类别");
    infoTableRowOne.addNewTableCell().setText("商标申请人");
    infoTableRowOne.addNewTableCell().setText("官费");
    infoTableRowOne.addNewTableCell().setText("代理费");
    infoTableRowOne.getCell(0).setColor("97FFFF");
    infoTableRowOne.getCell(1).setColor("97FFFF");
    infoTableRowOne.getCell(2).setColor("97FFFF");
    infoTableRowOne.getCell(3).setColor("97FFFF");
    //表格第二行
    XWPFTableRow infoTableRowTwo = infoTable.createRow();
    infoTableRowTwo.getCell(0).setText("姓名");
    infoTableRowTwo.getCell(1).setText(": seawater");

    //表格第三行
    XWPFTableRow infoTableRowThree = infoTable.createRow();
    infoTableRowThree.getCell(0).setText("生日");
    infoTableRowThree.getCell(1).setText(": xxx-xx-xx");

    //表格第四行
    XWPFTableRow infoTableRowFour = infoTable.createRow();
    infoTableRowFour.getCell(0).setText("性别");
    infoTableRowFour.getCell(1).setText(": 男");

    //表格第五行
    XWPFTableRow infoTableRowFive = infoTable.createRow();
    infoTableRowFive.getCell(0).setText("现居地");
    infoTableRowFive.getCell(1).setText(": xx");
    
    
    //页眉页脚部分
    CTSectPr sectPr = document.getDocument().getBody().addNewSectPr();
    XWPFHeaderFooterPolicy policy = new XWPFHeaderFooterPolicy(document, sectPr);

    //添加页眉
    CTP ctpHeader1 = CTP.Factory.newInstance();
    CTR ctrHeader1 = ctpHeader1.addNewR();
    CTText ctHeader1 = ctrHeader1.addNewT();
    String headerText1 = "北京市盈科律师事务所";
    ctHeader1.setStringValue(headerText1);
    
    CTP ctpHeader2 = CTP.Factory.newInstance();
    CTR ctrHeader2 = ctpHeader2.addNewR();
    CTText ctHeader2 = ctrHeader2.addNewT();
    String headerText2 = "北京盈天科地知识产权";
    ctHeader2.setStringValue(headerText2);

    XWPFParagraph headerParagraph1 = new XWPFParagraph(ctpHeader1, document);
    XWPFParagraph headerParagraph2 = new XWPFParagraph(ctpHeader2, document);
    //设置为右对齐
    headerParagraph1.setAlignment(ParagraphAlignment.RIGHT);
    headerParagraph2.setAlignment(ParagraphAlignment.RIGHT);
    XWPFParagraph[] parsHeader = new XWPFParagraph[2];
    parsHeader[0] = headerParagraph1;
    parsHeader[1] = headerParagraph2;
    policy.createHeader(XWPFHeaderFooterPolicy.DEFAULT, parsHeader);
    
    //添加页脚
    CTP ctpFooter = CTP.Factory.newInstance();
    CTR ctrFooter = ctpFooter.addNewR();
    CTText ctFooter = ctrFooter.addNewT();
    String footerText = "ctpFooter";
    ctFooter.setStringValue(footerText);
    XWPFParagraph footerParagraph = new XWPFParagraph(ctpFooter, document);
    
    footerParagraph.setAlignment(ParagraphAlignment.LEFT);
    XWPFParagraph[] parsFooter = new XWPFParagraph[1];
    parsFooter[0] = footerParagraph;
    policy.createFooter(XWPFHeaderFooterPolicy.DEFAULT, parsFooter);

    document.write(out);
    out.close();
}

/**
 * 致： 北京字节跳动科技有限公司  					账单号：ZD19TNS2968XX
 *											日期:2019年07月10日  
 * @param document
 */
public void addTable(XWPFDocument document){
	//基本信息表格
    XWPFTable infoTable = document.createTable();
    //去表格边框
    infoTable.getCTTbl().getTblPr().unsetTblBorders();

    //列宽自动分割
    CTTblWidth infoTableWidth = infoTable.getCTTbl().addNewTblPr().addNewTblW();
    infoTableWidth.setType(STTblWidth.DXA);
    infoTableWidth.setW(BigInteger.valueOf(9072));

    //表格第一行
    XWPFTableRow infoTableRowOne = infoTable.getRow(0);
 
    infoTableRowOne.getCell(0).setText("致：");
    infoTableRowOne.getCell(0).setWidth("10%");
    XWPFTableCell  cell1 = infoTableRowOne.addNewTableCell();
    cell1.setText("北京字节跳动科技有限公司");
    cell1.setWidth("60%");
    XWPFTableCell  cell2 =infoTableRowOne.addNewTableCell();
    cell2.setText("账单号：ZD19TNS2968XX");
    cell2.setWidth("30%");
    
    
    //表格第二行
    XWPFTableRow infoTableRowTwo = infoTable.createRow();
    infoTableRowTwo.getCell(0).setText("");
    infoTableRowTwo.getCell(1).setText("");
    infoTableRowTwo.getCell(2).setText("日期:2019年07月10日 ");
}
/**
 * 致： 北京字节跳动科技有限公司  					账单号：ZD19TNS2968XX
 *											日期:2019年07月10日  
 * @param document
 */
public void addTable2(XWPFDocument document){
	//基本信息表格
    XWPFTable infoTable = document.createTable();
    //去表格边框
    infoTable.getCTTbl().getTblPr().unsetTblBorders();

    //列宽自动分割
    CTTblWidth infoTableWidth = infoTable.getCTTbl().addNewTblPr().addNewTblW();
    infoTableWidth.setType(STTblWidth.DXA);
    infoTableWidth.setW(BigInteger.valueOf(9072));

    //表格第一行
    XWPFTableRow infoTableRowOne = infoTable.getRow(0);
 
    infoTableRowOne.getCell(0).setText("案件:");
    infoTableRowOne.getCell(0).setWidth("10%");
    XWPFTableCell  cell1 = infoTableRowOne.addNewTableCell();
    cell1.setText(" 商标申请 委托人：北京字节跳动科技有限公司 申请人:腾信嘉音国际广告(北京)有限公司  委托日期：2019年03月29日");
    cell1.setWidth("90%");
    
    
    
   
}
}