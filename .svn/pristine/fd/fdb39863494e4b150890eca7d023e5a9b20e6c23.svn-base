package com.zscq2.jxqd.controller;

import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.http.client.utils.HttpClientUtils;
import org.apache.log4j.Logger;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.zkoss.zk.ui.Component;
import org.zkoss.zk.ui.Executions;
import org.zkoss.zk.ui.util.Clients;
import org.zkoss.zk.ui.util.GenericForwardComposer;
import org.zkoss.zkplus.spring.SpringUtil;
import org.zkoss.zul.Combobox;
import org.zkoss.zul.Datebox;
import org.zkoss.zul.Doublebox;
import org.zkoss.zul.ListModel;
import org.zkoss.zul.ListModelList;
import org.zkoss.zul.Messagebox;
import org.zkoss.zul.Textbox;
import org.zkoss.zul.Window;

import com.yewu.jxqd.bean.Jxqd;
import com.yewu.zscq.bean.User;
import com.zscq2.jxqd.bean.Ajlx;
import com.zscq2.jxqd.bean.Ajzt;
import com.zscq2.jxqd.bean.Lazb;
import com.zscq2.jxqd.service.serviceimpl.LazbService;
import com.zscq2.jxqd.util.LazbJxr;


@Controller("addLazbController")   
@Scope("prototype") 
public class AddLazbController extends GenericForwardComposer{
	//案件类型检查
//		String ajlx_s = "商标异议申请,商标驳回复审,补正,全部驳回,商标驳回复审行政诉讼,商标注册申请,驳回复审决定,部分驳回,商标撤三申请,商标撤三复审,商标撤三答辩,商标驳回复审补正,商标驳回,商标补正,商标转让,商标异议答辩,商标异议补正,商标部分驳回,商标驳回决定,商标无效宣告,异议决定,商标地址变更,商标续展,商标变更,商标撤三决定,撤销复审答辩,诉讼,商标撤三补正,商标撤销复审,撤销复审决定,商标分割申请,证据交换,商标异议予以注册,异议决定准予注册,商标异议答辩通知,商标异议撤回,商标无效宣告撤回,商标异议答辩补正,异议决定不准予注册,撤三决定,分割申请,商标异议答辨,商标变更补正,商标撤回补正,商标无效宣告答辩,不予注册复审,商标行政诉讼,驳回复审,补正证据,异议补正,撤三复审,无效宣告行政诉讼,是否提无效宣告";
	String ajlx_str="";
	
	//获取service对象
	LazbService lazbService = (LazbService)SpringUtil.getBean("lazbService");
	
	private static Logger logger = Logger.getLogger(HttpClientUtils.class);
		Window addJxqd;//新增窗口ID
	  Textbox ajh;// '案件号',
	  Combobox ajlx;//  '案件类型',
	  Textbox sbmc;//  '商标名称',
	  Textbox lb;// , '类别',
	  Textbox sbh;//  '商标号',
	  Combobox ajzt_c;//案件状态
	  Datebox khwtrq;//  '客户委托日期',
	  Textbox khwtrq_str;//转换字段
	  Datebox sqrq;// '申请日',
	  Textbox sqr_str;// '申请日',
	  Datebox swrq;// '收文日期',
	  Textbox swrq_str;// '收文日期',
	  Datebox csrq;// '初审日期',
	  Textbox csrq_str;// '初审日期',
	  Textbox ggq;// '公告期',
	  Datebox jxr;// '绝限日',
	  Textbox jxr_str;// '绝限日',
	  Datebox sctjr;// '首次提交日',
	  Textbox sctjr_str;// '首次提交日',
	  Datebox bcqx;// '补充期限',
	  Datebox bctjrq;// '补充提交日期',
	  Textbox bctjrq_str;// '补充提交日期',
	  Textbox scbsbh;// '首次报送编号',
	  Textbox ecbsbh;// '二次报送编号',
	  Textbox wtkhmc;// '委托客户名称',
	  Textbox byyr;// '被异议对人',
	  Textbox wfdsr;// '申请人/请求人/我方当事人',
	  Textbox gfyj;// '官方结果',
	  Datebox gfyjswr;//官方意见收文日
	  Datebox gfyjjxr;//官方意见绝限日
	  Textbox dlr;// '代理人',
	  Textbox dlr2;// '代理人2',
	  Textbox yysqr;//异议申请人
	  Textbox khfk;// '客户付款',
	  Textbox ytfk;// '盈天付款',
	  Textbox ayr;// '案源人',
	  Textbox dlgs;// '代理公司',
	  Textbox remarks;//备注
	
public void doAfterCompose(Component comp) throws Exception {
	super.doAfterCompose(comp);//该行必须存在，否则异常
	
	
	Map map = new HashMap<Object,Object>();
	List<Ajlx> list_ajlx = lazbService.selectAjlx(map);
	for(Ajlx ajlx:list_ajlx){
		ajlx_str = ajlx_str+","+ajlx.getAjlx();
	}
	
	ListModel ajlxModelList =new ListModelList<Ajlx>();
	ajlxModelList = null;
	if(list_ajlx!= null && list_ajlx.size()>0){
		ajlxModelList = new ListModelList(list_ajlx);
	}
	ajlx.setModel(ajlxModelList);
	
	System.out.println();
	String msg = (String)Executions.getCurrent().getArg().get("msg");
	System.out.println();
	
	///-------------------------
			List<Ajzt> list_ajzt = new ArrayList<Ajzt>();
			
			
			Ajzt ajzt0 = new Ajzt();
			ajzt0.setAjzt("待提交");
			list_ajzt.add(ajzt0);
			Ajzt ajzt1 = new Ajzt();
			ajzt1.setAjzt("受理");
			list_ajzt.add(ajzt1);
			Ajzt ajzt2 = new Ajzt();
			ajzt2.setAjzt("待补正");
			list_ajzt.add(ajzt2);
			Ajzt ajzt3 = new Ajzt();
			ajzt3.setAjzt("已提交补正");
			list_ajzt.add(ajzt3);
			Ajzt ajzt4 = new Ajzt();
			ajzt4.setAjzt("不予受理");
			list_ajzt.add(ajzt4);
			Ajzt ajzt5 = new Ajzt();
			ajzt5.setAjzt("权利终止结案");
			list_ajzt.add(ajzt5);
			//案件状态
			
			 ajzt_c.setModel(new ListModelList(list_ajzt));
}
	
/**
 * 新增
 * @throws ParseException 
 */
public void onClick$addBtn() throws ParseException{
	if(ajlx.getValue() == null || "".equals(ajlx.getValue().trim())
			|| sbmc.getValue() == null || "".equals(sbmc.getValue().trim())
			|| lb.getValue() == null || "".equals(lb.getValue().trim())
			|| sbh.getValue() == null || "".equals(sbh.getValue().trim())){
		
		
		Messagebox.show("案件类型、商标名称、类别、商标号不能为空","注意", Messagebox.OK, Messagebox.EXCLAMATION);
		return;
	}
	if(jxr.getValue() == null && bcqx.getValue() !=null){
		Messagebox.show("绝限日为空时，不能编辑补充期限，保存失败","注意", Messagebox.OK, Messagebox.EXCLAMATION);
		return;
	}
//	Date1.after(Date2),当Date1大于Date2时，返回TRUE，当小于等于时，返回false； 
	if(jxr.getValue() != null && bcqx.getValue() !=null && !bcqx.getValue().after(jxr.getValue())){
		Messagebox.show("补充期限需要晚于绝限日，保存失败","注意", Messagebox.OK, Messagebox.EXCLAMATION);
		return;
	}
	
	//获取service对象
	LazbService lazbService = (LazbService)SpringUtil.getBean("lazbService");
	Map<Object,Object> map = new HashMap<>();

	map.clear();
	getInfoFromPage(map);//获取输入参数
	

	 String check_res = checkData(map);//检查录入数据内容是否合法
	 if(check_res != null){
			Messagebox.show("数据内容异常: \n"+check_res,"注意", Messagebox.OK, Messagebox.EXCLAMATION);
			return;
	}
	 String ajh =  getAjhByAjlx(lazbService,(String)map.get("ajlx"));
	 map.put("ajh", ajh);
	
	try {
		LazbJxr lazbJxr = new LazbJxr();
		lazbJxr.updateJxr(map, 1);//更新新增案件的绝限日、补充期限、官方绝限日
		int result = lazbService.insertLazb(map);
	} catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		Messagebox.show("保存失败，一般是某些信息长度超出限制，请复制以下信息提交给管理员\n"+map.toString(),"注意", Messagebox.OK, Messagebox.ERROR);
		return;
	}
	System.out.println();
	addJxqd.detach();//关闭窗口
	LazbController lazbController = (LazbController)session.getAttribute("lazbController");
	lazbController.ajh.setValue(ajh);
	lazbController.onClick$queryButton();
	Messagebox.show("保存成功","注意", Messagebox.OK, Messagebox.EXCLAMATION);
}

/**
 * 根据案件类型，获得合适的案件号
 * @param lazbService
 * @param lazb
 * @return
 */
private String getAjhByAjlx(LazbService lazbService,String ajlx){
	Map<Object,Object> map = new HashMap<>();
	String ajh="";
	

	
	List<Ajlx> list_ajlx = lazbService.selectAjlx(map);
	for(Ajlx ajlx_t:list_ajlx){
//		ajlx_str = ajlx_str+","+ajlx.getAjlx();
		if((ajlx_t.getAjlx()).endsWith(ajlx)){
			ajh = ajlx_t.getAjh();
			break;
		}
	}
	map.clear();
	map.put("ajh", ajh);
	Object a =lazbService.maxAjh(map);
	int no = lazbService.maxAjh(map);
	no++;
	Calendar cal = Calendar.getInstance();
	int year = cal.get(Calendar.YEAR)-2000;
	return ajh+year+no;
}
/**
 * 案件类型单击事件，点击后更显案件状态
 */
public void onChange$ajlx() {
	
	///-------------------------
			List<Ajzt> list_ajzt = new ArrayList<Ajzt>();
			
			
			Ajzt ajzt0 = new Ajzt();
			ajzt0.setAjzt("待提交");
			list_ajzt.add(ajzt0);
			Ajzt ajzt1 = new Ajzt();
			ajzt1.setAjzt("受理");
			list_ajzt.add(ajzt1);
			Ajzt ajzt2 = new Ajzt();
			ajzt2.setAjzt("待补正");
			list_ajzt.add(ajzt2);
			Ajzt ajzt3 = new Ajzt();
			ajzt3.setAjzt("已提交补正");
			list_ajzt.add(ajzt3);
			Ajzt ajzt4 = new Ajzt();
			ajzt4.setAjzt("不予受理");
			list_ajzt.add(ajzt4);
			Ajzt ajzt5 = new Ajzt();
			ajzt5.setAjzt("权利终止结案");
			list_ajzt.add(ajzt5);
			//案件状态
			
			 if(ajlx.getValue() != null && !"".equals(ajlx.getValue().trim())){
				 Map map = new HashMap<Object,Object>();
				 map.put("ajlx", ajlx.getValue().trim());
					List<Ajzt> list_ajzt2 = lazbService.selectAjzt(map);
					list_ajzt.addAll(list_ajzt2);
					
			 }
			 ajzt_c.setModel(new ListModelList(list_ajzt));
	
}
/**
* 检查excel中数据内容是否合法
* @param list
* @return
*/
private String checkData(Map<Object,Object> map){
	
		if(map.get("ajlx") == null){
			return "\n 案件类型不能为空";
		}
		//检查案件类型是否合法
		
		if(!ajlx_str.contains((String)map.get("ajlx"))){
			return map.get("ajlx") +"  \n该案件类型不合法\n合法案件类型如下：\n"+ajlx_str;
		}
	
	return null;
}
/**
 * 将页面传递来的信息存入MAP
 * @return
 */
private void getInfoFromPage(Map<Object,Object> map){
	
	
	if(ajlx.getValue() != null && !"".equals(ajlx.getValue())){
		map.put("ajlx", ajlx.getValue());
	}//  '案件类型',
	if(sbmc.getValue() != null && !"".equals(sbmc.getValue())){
		map.put("sbmc",sbmc.getValue() );
	}//  '商标名称',                    
	if(lb.getValue() != null && !"".equals(lb.getValue())){
		map.put("lb",lb.getValue() );
	}// , '类别',
	if(sbh.getValue() != null && !"".equals(sbh.getValue())){
		map.put("sbh",sbh.getValue() );
	}//  '商标号',
	if(ajzt_c.getValue() != null && !"".equals(ajzt_c.getValue())){
		map.put("ajzt",ajzt_c.getValue() );
	}//  '案件状态',
	if(khwtrq.getValue() != null && !"".equals(khwtrq.getValue())){
		map.put("khwtrq",khwtrq.getValue() );
	}//  '客户委托日期',
	
	if(sqrq.getValue() != null && !"".equals(sqrq.getValue())){
		map.put("sqrq",sqrq.getValue() );
	}// '申请日',
	
	if(swrq.getValue() != null && !"".equals(swrq.getValue())){
		map.put("swrq",swrq.getValue() );
	}// '收文日期',
	
	if(csrq.getValue() != null && !"".equals(csrq.getValue())){
		map.put("csrq",csrq.getValue() );
	}// '初审日期',
	if(ggq.getValue() != null && !"".equals(ggq.getValue())){
		map.put("ggq",ggq.getValue() );
	}// '公告期',
	if(jxr.getValue() != null && !"".equals(jxr.getValue())){
		map.put("jxr",jxr.getValue() );
	}// '绝限日',
	
	if(sctjr.getValue() != null && !"".equals(sctjr.getValue())){
		map.put("sctjr",sctjr.getValue() );
	}// '首次提交日',
	
	if(bcqx.getValue() != null && !"".equals(bcqx.getValue())){
		map.put("bcqx",bcqx.getValue() );
	}// '补充期限',
	if(bctjrq.getValue() != null && !"".equals(bctjrq.getValue())){
		map.put("bctjrq",bctjrq.getValue() );
	}// '补充提交日期',
	
	if(scbsbh.getValue() != null && !"".equals(scbsbh.getValue())){
		map.put("scbsbh",scbsbh.getValue() );
	}// '首次报送编号',
	if(ecbsbh.getValue() != null && !"".equals(ecbsbh.getValue())){
		map.put("ecbsbh",ecbsbh.getValue() );
	}// '二次报送编号',
	if(wtkhmc.getValue() != null && !"".equals(wtkhmc.getValue())){
		map.put("wtkhmc",wtkhmc.getValue() );
	}// '委托客户名称',
	if(byyr.getValue() != null && !"".equals(byyr.getValue())){
		map.put("byyr",byyr.getValue() );
	}// '被请求人/商标权人/对方相对人',
	
	if(gfyj.getValue() != null && !"".equals(gfyj.getValue())){
		map.put("gfyj",gfyj.getValue() );
	}// '官方结果',
	if(gfyjswr.getValue() != null && !"".equals(gfyjswr.getValue())){
		map.put("gfyjswr",gfyjswr.getValue() );
	}// '官方结果收文日',
	if(gfyjjxr.getValue() != null && !"".equals(gfyjjxr.getValue())){
		map.put("gfyjjxr",gfyjjxr.getValue() );
	}// '官方结果绝限日',
	if(dlr.getValue() != null && !"".equals(dlr.getValue())){
		map.put("dlr",dlr.getValue() );
	}// '代理人',
	if(dlr2.getValue() != null && !"".equals(dlr2.getValue())){
		map.put("dlr2",dlr2.getValue() );
	}// '代理人2',
	
	if(yysqr.getValue() != null && !"".equals(yysqr.getValue())){
		map.put("yysqr",yysqr.getValue() );
	}// 异议申请人
	
	if(khfk.getValue() != null && !"".equals(khfk.getValue())){
		map.put("khfk",khfk.getValue() );
	}// 客户付款
	
	if(ytfk.getValue() != null && !"".equals(ytfk.getValue())){
		map.put("ytfk",ytfk.getValue() );
	}// 盈天付款
	if(ayr.getValue() != null && !"".equals(ayr.getValue())){
		map.put("ayr",ayr.getValue() );
	}// '案源人',
	if(dlgs.getValue() != null && !"".equals(dlgs.getValue())){
		map.put("dlgs",dlgs.getValue() );
	}// '代理公司',
	
	if(remarks.getValue() != null && !"".equals(remarks.getValue())){
		map.put("remarks",remarks.getValue() );
	}//备注
	map.put("inputdate", new Date());//录入日期
	User user = (User)session.getAttribute("user");
	map.put("creater", user.getUser_name());
	
}

}
