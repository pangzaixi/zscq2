<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<display-name>test</display-name>
	
	<filter>

              <filter-name>zkFilter</filter-name>

              <filter-class>

                     org.zkoss.zk.ui.http.DHtmlLayoutFilter

              </filter-class>

              <init-param>

                     <param-name>extension</param-name>

                     <param-value>html</param-value>

                     <!-- Use XHTML components as default. -->

              </init-param>

       </filter>

       <filter-mapping>

              <filter-name>zkFilter</filter-name>

              <url-pattern>*.jsp</url-pattern>

              <dispatcher>REQUEST</dispatcher>

              <dispatcher>INCLUDE</dispatcher>

              <dispatcher>FORWARD</dispatcher>

              <dispatcher>ERROR</dispatcher>

       </filter-mapping>
       
	<listener>
		<description>
		Used to cleanup when a session is destroyed</description>
		<display-name>ZK Session cleaner</display-name>
		<listener-class>org.zkoss.zk.ui.http.HttpSessionListener</listener-class>
	</listener>
	<servlet>
		<description>
		The ZK loader for ZUML pages</description>
		<servlet-name>zkLoader</servlet-name>
		<servlet-class>org.zkoss.zk.ui.http.DHtmlLayoutServlet</servlet-class>
		<init-param>
			<param-name>update-uri</param-name>
			<param-value>/zkau</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet>
		<description>
		The asynchronous update engine for ZK</description>
		<servlet-name>auEngine</servlet-name>
		<servlet-class>org.zkoss.zk.au.http.DHtmlUpdateServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>zkLoader</servlet-name>
		<url-pattern>*.zul</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>zkLoader</servlet-name>
		<url-pattern>*.zhtml</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>auEngine</servlet-name>
		<url-pattern>/zkau/*</url-pattern>
	</servlet-mapping>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
		<welcome-file>index.zul</welcome-file>
	</welcome-file-list>
	
	<!-- 整合spring -->
	<!-- 
	<context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>
     -->
 
 <!--     
   <servlet>
　　<servlet-name>dispatcherServlet</servlet-name>
　　<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
　　　　<param-name>contextConfigLocation</param-name>
　　　　<param-value>/WEB-INF/spring-servlet.xml</param-value>
　　</init-param>
　　<load-on-startup>1</load-on-startup>
</servlet>

<servlet-mapping>   
 　　<servlet-name>dispatcherServlet</servlet-name>
　　 <url-pattern>/</url-pattern>
</servlet-mapping>
 -->  
	<listener>  
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
   </listener>    
   <!-- 默认配置在WEB-INF目录下 -->  
   <context-param>  
       <param-name>contextConfigLocation</param-name>  
       <param-value>classpath:config/applicationContext*.xml</param-value>   <!-- <param-value>/WEB-INF/spring*.xml</param-value> -->  
  </context-param>  
  
<!-- 配置log4j配置文件的路径，可以是xml或 properties（此参数必须配）--> 
<context-param>
   <param-name>log4jConfigLocation</param-name>
 <param-value>classpath:config/log4j.properties</param-value>
</context-param> 
<!-- 使用spring的监听器,当应用启动时来读取log4j的配置文件 -->
<listener>
	<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
</listener>
<!-- 监听器，在应用启动时启动定时器，或者获得全应用范围的变量赋值 -->
<!-- 
<listener>  
    <listener-class>com.system.timer.InitListener</listener-class>  
</listener>
 -->  	
 
 <!-- 配置springmvc 的DispatcherServlet -->
	<servlet>
		<servlet-name>dispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:config/spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>
<!-- Map all requests to the DispatcherServlet for handling -->
	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
</web-app>
